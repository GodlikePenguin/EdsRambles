---
import Blog from "@layouts/Blog";
import Date from "@components/utilities/Date";
import { published, getRSS, getCoverImagePath } from "@data/post"
import { Img } from "astro-imagetools/components";

export async function getStaticPaths({ rss }) {
	const markdownFiles = await Astro.glob('../../content/**/*.md');
	const posts = published(markdownFiles);

	rss(getRSS(markdownFiles));

	return posts.map((post) => {
		return {
			params: { post: post.slug },
			props: { post }
		};
	})
}

// Destructure to get both `Astro.props.post` and `Astro.props.post.Content`
const { post: { Content }, post } = Astro.props;
---

<Blog title={post.title} desc={post.desc} img={post.img ? post.img : null}>
	<div class="flex justify-center">
		<div class="py-6 prose lg:prose-lg">
			<figure class="flex justify-center rounded bg-base-200 overflow-hidden not-prose">
				<Img layout={"fill"} src={getCoverImagePath(post)} alt={post.title} />
			</figure>
			<h1>{post.draft && <span class="inline-block text-base-content/70 draft">Draft: </span>}{post.title}</h1>
			<div class="flex gap-3">
				<span class="badge badge-ghost">
					<Date date={post.date} />
				</span>
				<span class="badge badge-ghost">
					{post.readingTime} minutes
				</span>
			</div>
			<div>
				<Content />
			</div>
		</div>
	</div>
</Blog>

<style>
	.draft {
		border-bottom: solid 10px;
		border-image: repeating-linear-gradient(-55deg,
				#000,
				#000 20px,
				#ffb101 20px,
				#ffb101 40px) 10;
	}
</style>
